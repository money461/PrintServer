#获取cas 公共账号url CAS 登陆获取公共账户 token
spring.cas.caspublicUrl=http://cas.bondex.com.cn:8080/cslogin.jsp?userid=bondex_boeservice@bondex.com.cn&pwd=123456

#获取opids接口url
spring.cas.loadMore=http://cas.bondex.com.cn:8080/loadMore.jsp


#cas client config
##指明两项之间的一个选择。要匹配 |，请使用 \|。
#过滤器用于实现单点登出功能
spring.cas.signOutFilters=/*
#过滤器负责用户的认证
spring.cas.authFilters=/*
#正则表达式 代表cas-authFilters忽略符合该表达式的路径。 多个路径请使用 \|分割。|指明两项之间的一个选择。
spring.cas.ignorePattern=/*.js|/*.css|/*.pang|/*.org
#spring.cas.ignorePattern=/*
#对Ticket的校验
spring.cas.validateFilters=/*
#过滤器对HttpServletRequest请求包装
spring.cas.requestWrapperFilters=/*
#在任意代码处获取用户信息AssertionHolder.getAssertion().getPrincipal().getName()。把Assertion信息放在ThreadLocal变量中，这样应用程序不在web层也能够获取到当前登录信息
spring.cas.assertionFilters=/*
#casFilter 过滤器在shiroFilter过滤链中的规则
spring.cas.casFilterUrlPattern=/
#cas登出url
spring.cas.casServerLogoutUrl=http://cas.bondex.com.cn:8080/logout
#cas登录url
spring.cas.casServerLoginUrl=http://cas.bondex.com.cn:8080/login
#cas登录域名
spring.cas.casServerUrlPrefix=http://cas.bondex.com.cn:8080
#允许重定向
spring.cas.redirectAfterValidation=true

spring.cas.useSession=true
#登陆请求 CAS回调地址
spring.cas.clientloginUrl=/login


spring.cas.localServerSuccessUrl=${spring.cas.clientloginUrl}
spring.cas.localServerUnauthorizedUrl=/error/403

#cas登陆后跳转到本项目IP+Port
spring.cas.serverName=${spring.ip.address}

#CAS登出后 需要重定向至项目初始请求下
spring.cas.casClientUrl=${spring.cas.serverName}/${server.context-path}


